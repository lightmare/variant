language: generic

sudo: false

matrix:
  include:
    - os: linux
      compiler: "clang35"
      env: CXX=clang++-3.5 COVERAGE=True
      addons:
        apt:
          sources: [ 'ubuntu-toolchain-r-test', 'llvm-toolchain-precise-3.5' ]
          packages: [ 'clang-3.5', 'libstdc++-4.9-dev' ]
    - os: linux
      compiler: "clang36"
      env: CXX=clang++-3.6
      addons:
        apt:
          sources: [ 'ubuntu-toolchain-r-test', 'llvm-toolchain-precise-3.6' ]
          packages: [ 'clang-3.6' ]
    - os: linux
      compiler: "clang37"
      env: CXX=clang++-3.7
      addons:
        apt:
          sources: [ 'ubuntu-toolchain-r-test', 'llvm-toolchain-precise-3.7' ]
          packages: [ 'clang-3.7' ]

install:
 - echo ${CXX}
 - if [[ $(uname -s) == 'Linux' ]]; then
     export PYTHONPATH=$(pwd)/.local/lib/python2.7/site-packages;
   else
     export PYTHONPATH=$(pwd)/.local/lib/python/site-packages;
   fi
 - if [[ ${COVERAGE:-0} == 'True' ]]; then
     PYTHONUSERBASE=$(pwd)/.local pip install --user cpp-coveralls;
   fi

script:
 # Build in Release
 - make test
 - make bench
 - make sizes
 - scripts/run_compilation_failure_tests.sh
 - make clean;
 # Build in Debug
 - export BUILDTYPE=Debug
 - make test
 - make bench
 - make sizes
 - scripts/run_compilation_failure_tests.sh
 - if [[ ${TEST_GYP_BUILD:-0} == 'True' ]]; then
     make clean;
     make gyp;
   fi

after_script:
 - if [[ ${COVERAGE:-0} == 'True' ]]; then
    make clean;
    make coverage;
    ./out/cov-test;
    cp unit*gc* test/;
    ./.local/bin/cpp-coveralls --gcov /usr/bin/llvm-cov-3.5 --gcov-options '\-lp' -i optional.hpp -i recursive_wrapper.hpp -i variant.hpp -i variant_io.hpp variant_cast.hpp;
   fi
